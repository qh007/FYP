movies = read_excel('Movies.xlsx')
x1 = paste('year',1:10, sep="")
x2 = paste('month', 1:12, sep="")
x1 =  paste(x1, collapse = " + ")
x2 = paste(x2, collapse = " + ")
variable_names = names(movies2)
iv_variables = names(movies[6:8])
reg_formula = as.formula(paste(
"log(assaults) ~",
paste(variable_names[variable_names != c("assaults","wkd_ind")], collapse = " + "),
"|",
paste(iv_variables, collapse = "+"), "+",
paste(names(movies2)[-c(1:4)], collapse = "+")))
reg_formula
variable_names = names(movies2)
iv_variables = names(movies[6:8])
reg_formula = as.formula(paste(
"log(assaults) ~",
paste(variable_names[variable_names != c("assaults","wkd_ind")], collapse = " + "),
"|",
paste(iv_variables, collapse = "+"), "+",
paste(names(movies2)[-c(1:4)], collapse = "+")))
reg_formula
-0.0038738*100
0.001*100
-0.0038930*100
confint(iv_movies)[2:4,]
-0.0038738*6 + (-0.0038930)(-2) + 0.0027221
-0.0038738*6 + (-0.0038930)*(-2) + 0.0027221
0.0127*100
confint(iv_movies)[2,]
confint(iv_movies)[2,]*6
confint(iv_movies)[2:4,]
confint(iv_movies)[2,]*6 + confint(iv_movies)[3,]*(-2) + confint(iv_movies)[4,]*(-1)
[-0.021240544 -0.004228462]*100
0.021240544 *100
0.004228462 *100
View(movies)
iv_variables = names(movies[8:14])
iv_variables
variable_names = names(movies2)
iv_variables = names(movies[9:15])
reg_formula = as.formula(paste(
"log(assaults) ~",
paste(variable_names[variable_names != c("assaults","wkd_ind")], collapse = " + "),
"|",
paste(iv_variables, collapse = "+"), "+",
paste(names(movies2)[-c(1:4)], collapse = "+")))
reg_formula
iv_variables
variable_names = names(movies2)
iv_variables = names(movies[9:14])
reg_formula = as.formula(paste(
"log(assaults) ~",
paste(variable_names[variable_names != c("assaults","wkd_ind")], collapse = " + "),
"|",
paste(iv_variables, collapse = "+"), "+",
paste(names(movies2)[-c(1:4)], collapse = "+")))
reg_formula
iv_movies2 = ivreg(reg_formula, data = movies)
summary(iv_movies2)
-3.174e-03*100
-4.121e-03*100
-2.582e-03*100
0.1*100
(-0.41)*(-2) + 0.258
(-0.41)*(-2)
confint(iv_movies)[3,]*(-2)
confint(iv_movies2)[3,]*(-2)
0.014172857 *100
0.002313109 *100
iv_movies2 = ivreg(reg_formula, data = movies)
coeftest(iv_movies2, vcov = vcovHC, type = "HC1")
iv_movies = ivreg(reg_formula, data = movies)
coeftest(iv_movies, vcov = vcovHC, type = "HC1")
confint(iv_movies)[2:4,]
confint(iv_movies)[2,]*6 + confint(iv_movies)[3,]*(-2) + confint(iv_movies)[4,]*(-1)
0.006984977*100
confint(iv_movies2)[3,]*(-2)
iv_movies_OR <- lm(residuals(iv_movies2) ~ attend_v_f + attend_m_f + attend_n_f,attend_v_b,attend_m_b, attend_n_b)
iv_movies_OR <- lm(residuals(iv_movies2) ~ attend_v_f + attend_m_f + attend_n_f,attend_v_b,attend_m_b, attend_n_b, data = movies)
iv_movies_OR <- lm(residuals(iv_movies2) ~ attend_v_f + attend_m_f + attend_n_f,attend_v_b,attend_m_b, attend_n_b, data = movies)
View(movies)
iv_movies_OR <- lm(residuals(iv_movies2) ~ attend_v_f + attend_m_f + attend_n_f,attend_v_b,attend_m_b, attend_n_b, data = movies)
iv_movies_OR <- lm(residuals(iv_movies2) ~ attend_v_f + attend_m_f + attend_n_f+attend_v_b+attend_m_b+ attend_n_b, data = movies)
iv_movies_OR <- lm(residuals(iv_movies2) ~ attend_v_f + attend_m_f + attend_n_f+attend_v_b+attend_m_b+ attend_n_b, data = movies)
iv_movies_test <- linearHypothesis(iv_movies_OR,
c("attend_v_f = 0", "attend_m_f = 0", "attend_n_f =0", "attend_v_b = 0", "attend_m_b =0", "attend_n_b=0" ),
test = "Chisq")
iv_movies_OR <- lm(residuals(iv_movies2) ~ attend_v_f + attend_m_f + attend_n_f+attend_v_b+attend_m_b+ attend_n_b, data = movies)
iv_movies_test <- linearHypothesis(iv_movies_OR,
c("attend_v_f = 0", "attend_m_f = 0", "attend_n_f =0", "attend_v_b = 0", "attend_m_b =0", "attend_n_b=0" ),
test = "Chisq")
iv_movies_test
iv_movies_OR <- lm(residuals(iv_movies2) ~ attend_v_f + attend_m_f + attend_n_f+attend_v_b+attend_m_b+ attend_n_b, data = movies)
iv_movies_test <- linearHypothesis(iv_movies_OR,
c("attend_v_f = 0", "attend_m_f = 0", "attend_n_f =0", "attend_v_b = 0", "attend_m_b =0", "attend_n_b=0" ),
test = "Chisq")
iv_movies_test
pchisq(iv_movies_test[2, 5], df = 3, lower.tail = FALSE)
iv_movies_OR <- lm(residuals(iv_movies2) ~ attend_v_f + attend_m_f + attend_n_f+attend_v_b+attend_m_b+ attend_n_b, data = movies)
iv_movies_test <- linearHypothesis(iv_movies_OR,
c("attend_v_f = 0", "attend_m_f = 0", "attend_n_f =0", "attend_v_b = 0", "attend_m_b =0", "attend_n_b=0" ),
test = "Chisq")
pchisq(iv_movies_test[2, 5], df = 3, lower.tail = FALSE)
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
setwd('C:/Users/zhouq/OneDrive - Nanyang Technological University/HE4903- Advanced Econometrics/Problem Sets/Problem set 3')
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
setwd('C:/Users/zhouq/OneDrive - Nanyang Technological University/HE4903- Advanced Econometrics/Problem Sets/Problem set 3')
library("readxl")
library(AER)
library(stargazer)
names = read_excel("C:/Users/zhouq/OneDrive - Nanyang Technological University/HE4903- Advanced Econometrics/Problem Sets/Problem set 3/Names.xlsx")
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
setwd('C:/Users/zhouq/OneDrive - Nanyang Technological University/HE4903- Advanced Econometrics/Problem Sets/Problem set 3')
library("readxl")
library(AER)
library(stargazer)
names = read_excel("C:/Users/zhouq/OneDrive - Nanyang Technological University/HE4903- Advanced Econometrics/Problem Sets/Problem set 3/Names.xlsx")
View(names)
15.93+4.08*1.96
15.93 - 4.08*1.96
15.93+1.96*4.08/sqrt(5766)
15.93-1.96*4.08/sqrt(5766)
1.22 - 1.96*3.84
1.22 - 1.96*3.64
15.93 - 4.08*1.645
15.93 + 4.08*1.645
6*0.74
0.04*6
1.45*6
15.93 + 4.44
7.81 + 0.24
24.06+8.7
1348-1395
60/100
(0.6-0.5)/sqrt(100*0.6*0.4)
(0.6-0.5)/sqrt(0.6*0.4/100)
(0.55-0.5)/sqrt(0.55*0.45/100)
names = read_excel("C:/Users/zhouq/OneDrive - Nanyang Technological University/HE4903- Advanced Econometrics/Problem Sets/Problem set 3/Names.xlsx")
names = read_excel("C:/Users/zhouq/OneDrive - Nanyang Technological University/HE4903- Advanced Econometrics/Problem Sets/Problem set 3/Names.xlsx")
summary(names)
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
setwd('C:/Users/zhouq/OneDrive - Nanyang Technological University/HE4903- Advanced Econometrics/Problem Sets/Problem set 3')
library("readxl")
library(AER)
library(stargazer)
library(dplyr)
mean_byrace = names%>% group_by(black) %>% summarize(mean(call_back))
library(dplyr)
"C:\Program Files\R\R-4.3.2"
"C:/Program Files/R/R-4.3.2"
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
setwd('C:/Users/zhouq/OneDrive - Nanyang Technological University/HE4903- Advanced Econometrics/Problem Sets/Problem set 3')
library("readxl")
library(AER)
library(stargazer)
library(dplyr)
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
setwd('C:/Users/zhouq/OneDrive - Nanyang Technological University/HE4903- Advanced Econometrics/Problem Sets/Problem set 3')
library("readxl")
library(AER)
library(stargazer)
library(dplyr)
names = read_excel("C:/Users/zhouq/OneDrive - Nanyang Technological University/HE4903- Advanced Econometrics/Problem Sets/Problem set 3/Names.xlsx")
mean_byrace = names%>% group_by(black) %>% summarize(mean(call_back))
mean_byrace = names%>% group_by(black) %>% summarize(mean(call_back))
mean_byrace
mean_byrace = names%>% group_by(black) %>% summarize(mean(call_back), SE = sd(call_back) / sqrt(n()), 95_CI = [mean(call_back) - SE*1.96, mean(call_back)+SE*1.96])
mean_byrace = names%>% group_by(black) %>% summarize(mean(call_back), SE = sd(call_back) / sqrt(n()), 95_CI_lower = mean(call_back) - SE*1.96, 95_CI_upper = mean(call_back)+SE*1.96)
mean_byrace = names%>% group_by(black) %>% summarize(mean(call_back), SE = sd(call_back) / sqrt(n()), CI95_lower = mean(call_back) - SE*1.96, CI95_upper = mean(call_back)+SE*1.96)
mean_byrace
mean_byrace = names%>% group_by(black) %>% summarize(mean(call_back), SE = sd(call_back) / sqrt(n()), CI95_lower = mean(call_back) - SE*1.96, CI95_upper = mean(call_back)+SE*1.96)
mean_byrace
summary(names$call_back)
sd(names$call_back)
byrace = names%>% group_by(black) %>% summarize(mean(call_back), SE = sd(call_back) / sqrt(n()), CI95_lower = mean(call_back) - SE*1.96, CI95_upper = mean(call_back)+SE*1.96)
byrace
0.06447639 - 0.09650924
black = names%>% group_by(black)
t_test_result <- t.test(black)
View(black)
t_test_result = names%>% group_by(black) %>% group_modify(~t.test(.x$call_back))
t_test_result = names%>% group_by(black) %>% group_modify(~t.test(call_back))
t_test_result = names%>% group_by(black) %>% group_modify(~t.test(.x$call_back))
black = names%>% select(black ==0)
black = names%>% filter(black ==0)
black = names%>% filter(black ==1)
white = names%>$ filter(black == 0)
black = names%>% filter(black ==1)
white = names%>% filter(black == 0)
t.test(black$call_back, white$call_back)
black = names%>% filter(black ==1)
white = names%>% filter(black == 0)
t.test(black$call_back, white$call_back)
0.03203285*100
byracegender = names%>% group_by(black) %>% group_by(female) summarize(mean(call_back), SE = sd(call_back) / sqrt(n()), CI95_lower = mean(call_back) - SE*1.96, CI95_upper = mean(call_back)+SE*1.96)
byracegender = names%>% group_by(black) %>% group_by(female) %>%  summarize(mean(call_back), SE = sd(call_back) / sqrt(n()), CI95_lower = mean(call_back) - SE*1.96, CI95_upper = mean(call_back)+SE*1.96)
byrace
byracegender = names%>% group_by(black, female) %>%  summarize(mean(call_back), SE = sd(call_back) / sqrt(n()), CI95_lower = mean(call_back) - SE*1.96, CI95_upper = mean(call_back)+SE*1.96)
byrace
byracegender = names%>% group_by(black, female) %>%  summarize(mean(call_back), SE = sd(call_back) / sqrt(n()), CI95_lower = mean(call_back) - SE*1.96, CI95_upper = mean(call_back)+SE*1.96)
byracegender
byracegender = names%>% group_by(black, female) %>%  summarize(mean(call_back), SE = sd(call_back) / sqrt(n()), CI95_lower = mean(call_back) - SE*1.96, CI95_upper = mean(call_back)+SE*1.96)
byracegender
byracegender = names%>% .groups(black, female) %>%  summarize(mean(call_back), SE = sd(call_back) / sqrt(n()), CI95_lower = mean(call_back) - SE*1.96, CI95_upper = mean(call_back)+SE*1.96)
byracegender = names%>% group_by(black, female) %>%  summarize(mean(call_back), SE = sd(call_back) / sqrt(n()), CI95_lower = mean(call_back) - SE*1.96, CI95_upper = mean(call_back)+SE*1.96, .groups = "keep")
byracegender
0.06627784 - 0.05828780
0.00799004*100
black_f = names%>% filter(black ==1, female == 1)
black_m = names%>% filter(black ==1, female == 0)
t.test(black_f$call_back, black_m$call_back)
white_f = names%>% filter(black ==0, female == 1)
white_m = names%>% filter(black ==0, female == 0)
t.test(white_f$call_back, white_m$call_back)
0.09892473 - 0.08869565
0.01022908*100
mmodel1 = lm(callback~., data = names)
mmodel1 = lm(call_back~., data = names)
summary(model1)
model1 = lm(call_back~., data = names)
summary(model1)
model1 = lm(call_back~female, data = names)
summary(model1)
model1 = lm(call_back~female+black, data = names)
summary(model1)
model1 = lm(call_back~female+black+female*black, data = names)
summary(model1)
model1 = lm(call_back~black+female*black, data = names)
summary(model1)
model1 = lm(call_back~black+female*black, data = names)
summary(model1)
model1 = lm(call_back~black+female*black, data = names)
summary(model1)
model1 = lm(call_back~female+black, data = names)
summary(model1)
View(names)
model1 = lm(call_back~ofjobs + yearsexp + honors + volunteer + military+empholes+workinschool+email+computerskills+specialskills+college+black, data = names)
summary(model1)
model1 = lm(call_back~black*ofjobs + black*yearsexp + black*honors + black*volunteer + black*military+black*empholes+black*workinschool+black*email+black*computerskills+black*specialskills+black*college+ black, data = names)black*
model1 = lm(call_back~ black*ofjobs + black*yearsexp + black*honors + black*volunteer + black*military + black*empholes + black*workinschool + black*email +black*computerskills +black*specialskills+ black*college+ black, data = names)
summary(model1)
model1 = lm(call_back~  black*yearsexp + black*honors + black*empholes +black*computerskills +black*specialskills, data = names)
summary(model1)
model1 = lm(call_back~female*black, data = names)
summary(model1)
lm(call_back~black, data = names)
summary(lm(call_back~black, data = names))
summary(lm(call_back~black, data = names))
byrace = names%>% group_by(black)
byrace
byrace = names%>% group_by(black) %>% summarize(mean(call_back))
byrace
byrace = names%>% group_by(black) %>% summarize(mean(call_back))
byrace
byrace = names%>% group_by(black) %>% summarize(mean(call_back))
byrace
summary(lm(call_back~black, data = names))
confint(lm(call_back~black, data = names))
model1 = lm(call_back~high, data = names)
summary(model1)
0.014057   *100
model1 = lm(call_back~  black*high, data = names)
summary(model1)
-0.023102-0.017781
0.0229*100
0.022948 -0.017781
0.005167*100
model1 = lm(call_back~  firstname, data = names)
summary(model1)
byracegender = names%>% group_by(black, female) %>%  summarize(mean(call_back) .groups = "keep")
byracegender = names%>% group_by(black, female) %>%  summarize(mean(call_back), .groups = "keep")
byracegender
model1 = lm(call_back~  firstname*black, data = names)
summary(model1)
firstnames = names%>% group_by(firstnames)
firstnames = names%>% group_by(firstname)
firstnames = names%>% group_by(firstname)%>%mean(Black)
firstnames = names%>% group_by(firstname)%>%mean(black)
firstnames = names%>% group_by(firstname)%>%mean(call_back)
byrace = names%>% group_by(black) %>% summarize(mean(call_back), n(), sd(call_back))
byrace
byracegender = names%>% group_by(black, female) %>%  summarize(mean(call_back),n(), sd(call_back), .groups = "keep")
byracegender
confint(lm(call_back~black, data = names))
byracegender = names%>% group_by(black, female) %>%  summarize(mean(call_back),n(), sd(call_back), .groups = "keep")
byracegender
0.06627784 - 0.09892473
-0.03264689*100
black_f = names%>% filter(black ==1, female == 1)
white_f = names%>% filter(black ==0, female == 1)
t.test(black_f$call_back, white_f$call_back)
0.05828780 - 0.08869565
-0.03040785*100
0.05828780 - 0.08869565
black_m = names%>% filter(black ==1, female == 0)
white_m = names%>% filter(black ==0, female == 0)
t.test(black_m$call_back, white_m$call_back)
black_f = names%>% filter(black ==1, female == 1)
white_f = names%>% filter(black ==0, female == 1)
t.test(black_f$call_back, white_f$call_back)
black_m = names%>% filter(black ==1, female == 0)
white_m = names%>% filter(black ==0, female == 0)
t.test(black_m$call_back, white_m$call_back)
model1 = lm(call_back~female*black, data = names)
summary(model1)
black_f = names%>% filter(black ==1 & female == 1)
white_f = names%>% filter(black ==0 & female == 1)
t.test(black_f$call_back, white_f$call_back)
View(black_f)
help(t.test)
black_f = names%>% filter(black ==1 & female == 1)
white_f = names%>% filter(black ==0 & female == 1)
t.test(black_f$call_back, white_f$call_back, mu = 0)
black_f = names%>% filter(black ==1 & female == 1)
white_f = names%>% filter(black ==0 & female == 1)
t.test(black_f$call_back, white_f$call_back)
black_f = names%>% filter(black ==1 & female == 1)
white_f = names%>% filter(black ==0 & female == 1)
t.test(black_f$call_back, white_f$call_back, var.equal=F)
black_f = names%>% filter(black ==1 & female == 1)
white_f = names%>% filter(black ==0 & female == 1)
t.test(black_f$call_back, white_f$call_back)
model1 = lm(black~ female+high+chicago, data = names)
summary(model1)
# SPECIFY FUNCTIONS FOR DATA TRANSFORMATION
D = function(x){c(NA,diff(x))}
DD = function(x){c(NA,NA,diff(diff(x)))}
L = function(x){c(log(x))}
DL = function(x){c(NA,diff(log(x)))}
DDL = function(x){c(NA,NA,diff(diff(log(x))))}
startDate = "1959-01-01"
endDate = "2019-12-31"
date_format = '%d/%m/%Y'
date_filtering = function(x, start_date, end_date, date_format){
transform_header = x[1,]
x$Date = as.Date(x$Date,format = date_format)
x = x[x$Date >= start_date & x$Date <= end_date,]
x[1,] = transform_header
return(x)}
# transformation type is in first row
transform = function(x){
c2 = which(x[1,]==2)
c3 = which(x[1,]==3)
c4 = which(x[1,]==4)
c5 = which(x[1,]==5)
c6 = which(x[1,]==6)
x1 = x[-(1),] # remove first row
for (i in c2){tt = D(x1[,i])
x1[,i] = tt}
for (i in c3){
tt = DD(x1[,i])
x1[,i] = tt }
for (i in c4){
tt = L(x1[,i])
x1[,i] = tt }
for (i in c5){
tt = DL(x1[,i])
x1[,i] = tt}
for (i in c6){
tt = DDL(x1[,i])
x1[,i] = tt }
x = x1}
# transform monthly data
x = date_filtering(data.m,
start_date =  startDate,
end_date = endDate,
date_format = date_format)
setwd('C:/Users/zhouq/OneDrive - Nanyang Technological University/FYP/Codes/FYP')
library(lubridate)
# Load Data
data.m = read.table('month.txt', header = T, sep = ',')
data.q = read.table('quarter.txt', header = T, sep = ',')
'''
Data information
MONTH
Source: FRED - MD
File: month.txt
TRANSFORMATIONS
1: none
2: D
3: DD
4: Log
5: Dlog
6: DDlog
M1* - 5 - INDPRO 		- IP Index
M2  - 2 - CUMFNS 		- Capacity Utilization: Manufacturing
M3  - 2 - UNRATE 		- Civilian Unemployment Rate
M4* - 5 - PAYEMS 		- All Employees: Total nonfarm
M5* - 4 - HOUST  		- Housing Starts: Total New Privately Owned
M6  - 5 - DPCERA3M086SBEA 	- Real personal consumption expenditures
M7* - 5 - RETAILx	  	- Retail and Food Services Sales
M8  - 5 - AMDMNOx 		- New Orders for Durable Goods
M9  - 2 - UMCSENTx		- Consumer Sentiment Index
M10 - 6 - PPIFGS 		- PPI: Finished Goods (in file under WPSFD49207)
M11*- 5 - TWEXMMTH		- Nominal effective exchange rate US
M12*- 2 - FEDFUNDS   		- Effective Federal Funds Rate
M13 - 1 - AAAFFM     		- Moody’s Aaa Corporate Bond Minus FEDFUNDS
M14*- 1 - BAAFFM     		- Moody’s Baa Corporate Bond Minus FEDFUNDS
M15*- 1 - COMPAPFFx  		- 3-Month Commercial Paper Minus FEDFUNDS
M16 - 1 - TB3SMFFM   		- 3-Month Treasury C Minus FEDFUNDS
M17 - 1 - T10YFFM    		- 10-Year Treasury C Minus FEDFUNDS
M18 - 2 - GS1        		- 1-Year Treasury Rate
M19 - 2 - GS10       		- 10-Year Treasury Rate
M20 - 1 - GS10-TB3MS 		- 10-Year Treasury Rate - 3-Month Treasury Bill
* indicated included in the small but not the medium sized sample.
'''
view(x1)
View(x1)
# SPECIFY FUNCTIONS FOR DATA TRANSFORMATION
D = function(x){c(NA,diff(x))}
DD = function(x){c(NA,NA,diff(diff(x)))}
L = function(x){c(log(x))}
DL = function(x){c(NA,diff(log(x)))}
DDL = function(x){c(NA,NA,diff(diff(log(x))))}
startDate = "1959-01-01"
endDate = "2019-12-31"
date_format = '%d/%m/%Y'
date_filtering = function(x, start_date, end_date, date_format){
transform_header = x[1,]
x$Date = as.Date(x$Date,format = date_format)
x = x[x$Date >= start_date & x$Date <= end_date,]
x[1,] = transform_header
return(x)}
# transformation type is in first row
transform = function(x){
c2 = which(x[1,]==2)
c3 = which(x[1,]==3)
c4 = which(x[1,]==4)
c5 = which(x[1,]==5)
c6 = which(x[1,]==6)
x1 = x[-(1),] # remove first row
for (i in c2){tt = D(x1[,i])
x1[,i] = tt}
for (i in c3){
tt = DD(x1[,i])
x1[,i] = tt }
for (i in c4){
tt = L(x1[,i])
x1[,i] = tt }
for (i in c5){
tt = DL(x1[,i])
x1[,i] = tt}
for (i in c6){
tt = DDL(x1[,i])
x1[,i] = tt }
x = x1}
# transform monthly data
x = date_filtering(data.m,
start_date =  startDate,
end_date = endDate,
date_format = date_format)
data.m = transform(x)
data.m1 <- ts(data.m[,-1], start = c(1990, 1), frequency = 12)
data.q1 <- aggregate(data.m1, nfrequency = 4, mean)
# transform quarterly GDP data
x1 = date_filtering(data.q,
start_date = startDate,
end_date = endDate,
date_format = date_format)
x1[,2] = DL(x1[,2])
data.q = x1
data.q[1,1]= dmy('31/03/1959')
view(data.q)
View(data.q)
# check unit root
adf.test(data.q['GDP'])
install.packages("aTSA")
# check unit root
adf.test(data.q['GDP'])
library(aTSA)
# check unit root
adf.test(data.q['GDP'])
data.q['GDP']
library(tseries)
# check unit root
adf.test(data.q['GDP'])
# check unit root
adf.test(data.q)
# check unit root
adf.test(data.q['GDP'])
# check unit root
adf.test(data.q['GDP'])
# check unit root
adf.test(data.q$GDP)
# check unit root
adf.test(data.q$GDP, na.rm = T)
# check unit root
adf.test(na.omit(data.q$GDP))
adf.test(na.omit(data.1$M1))
adf.test(na.omit(data.q1$M1))
View(data.q1)
adf.test(na.omit(data.q1$M1))
adf.test(na.omit(data.q1['M1']))
adf.test(na.omit(data.q1['M1']))
data.q1['M1']
data.q1
data.q1[['M1']]
data.q1[1,]
data.q1[,1]
adf.test(na.omit(data.q1[[,1]]))
adf.test(na.omit(data.q1[,1]))
adf.test(na.omit(data.q1[,3]))
adf.test(na.omit(data.q1[,2]))
