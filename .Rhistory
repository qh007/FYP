model = lm(weeksworked~morekids, data = fertility)
library("readxl")
fertility = read_excel("fertility.xlsx")
model = lm(weeksm1~morekids, data = fertility)
library("readxl")
fertility = read_excel("fertility.xlsx")
model = lm(weeksm1~morekids, data = fertility)
summary(model)
library("readxl")
fertility = read_excel("fertility.xlsx")
model = lm(weeksm1~morekids, data = fertility)
summary(model)
library("readxl")
fertility = read_excel("fertility.xlsx")
model = lm(weeksm1~morekids, data = fertility)
summary(model)
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
setwd('C:/Users/zhouq/OneDrive - Nanyang Technological University/HE4903- Advanced Econometrics/Problem Sets/Problem set 1')
library("readxl")
fertility = read_excel("fertility.xlsx")
model = lm(weeksm1~morekids, data = fertility)
summary(model)
library("readxl")
fertility = read_excel("fertility.xlsx")
model = lm(weeksm1~morekids, data = fertility)
summary(model)
model1 = lm(morekids~samesex, data = fertility)
summary(model1)
model = lm(weeksm1~morekids, data = fertility)
summary(model)
model_ivreg <- ivreg(weeksm1~morekids | samesex, data = fertility)
library(AER)
library(stargazer)
model_ivreg <- ivreg(weeksm1~morekids | samesex, data = fertility)
summary(model_ivreg)
model_ivreg <- ivreg(weeksm1~morekids +agem1+ black+hispan+othrace | samesex, data = fertility)
model_ivreg1 <- ivreg(weeksm1~agem1+ black+hispan+othrace | morekids+ samesex, data = fertility)
model_ivreg1 <- ivreg(weeksm1~agem1+ black+hispan+othrace | morekids+ samesex, data = fertility)
summary(model_ivreg1)
model_ivreg1 <- ivreg(weeksm1~agem1+black+hispan+othrace | morekids+ samesex, data = fertility)
summary(model_ivreg1)
model_ivreg1 <- ivreg(weeksm1~agem1+black+hispan+othrace | morekids+ samesex, data = fertility)
coeftest(model_ivreg1)
model_ivreg1 <- ivreg(weeksm1~agem1+black+hispan+othrace | morekids+ samesex, data = fertility)
coeftest(model_ivreg1, vcov = vcovHC, type = "HC1")
model_ivreg1 <- ivreg(weeksm1~agem1+black+hispan+othrace | morekids+ samesex, data = fertility)
summary(model_ivreg1)
model_ivreg1 <- ivreg(weeksm1~agem1+black+hispan+othrace+morekids | morekids+ samesex, data = fertility)
summary(model_ivreg1)
model_ivreg1 <- ivreg(weeksm1~agem1+black+hispan+othrace+morekids | morekids+ samesex, data = fertility)
summary(model_ivreg1)
model_ivreg1 <- ivreg(weeksm1~morekids | agem1+black+hispan+othrace+ samesex, data = fertility)
summary(model_ivreg1)
model_ivreg1 <- ivreg(weeksm1~ morekids + agem1+black+hispan+othrace+| samesex+ agem1+black+hispan+othrace, data = fertility)
model_ivreg1 <- ivreg(weeksm1~ morekids+agem1+black+hispan+othrace | samesex+agem1+black+hispan+othrace, data = fertility)
summary(model_ivreg1)
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
setwd('C:/Users/zhouq/OneDrive - Nanyang Technological University/HE4903- Advanced Econometrics/Problem Sets/Problem set 1')
model_ivreg <- ivreg(weeksm1~morekids | samesex, data = fertility)
model_ivreg <- ivreg(weeksm1~morekids | samesex, data = fertility)
model = lm(weeksm1~morekids, data = fertility)
coeftest(model)
model = lm(weeksm1~morekids, data = fertility)
summary(model)
library(AER)
library(stargazer)
model_ivreg <- ivreg(weeksm1~morekids | samesex, data = fertility)
coeftest(model_ivreg)
setwd('C:/Users/zhouq/OneDrive - Nanyang Technological University/FYP/Codes/FYP')
# Load Data
data.m = read.table('month.txt', header = T, sep = ',')
data.q = read.table('quarter.txt', header = T, sep = ',')
D = function(x){c(NA,diff(x))}
DD = function(x){c(NA,NA,diff(diff(x)))}
L = function(x){c(log(x))}
DL = function(x){c(NA,diff(log(x)))}
DDL = function(x){c(NA,NA,diff(diff(log(x))))}
startDate = "1959-01-01"
endDate = "2019-12-31"
date_format = '%d/%m/%Y'
date_filtering = function(x, start_date, end_date, date_format,get_transform_header = FALSE){
transform_header = x[1,]
x$Date = as.Date(x$Date,format = date_format)
x = x[x$Date >= start_date & x$Date <= end_date,]
return(x)
}
# transformation type is in first row
transform = function(x){
c2 = which(x[1,]==2)
c3 = which(x[1,]==3)
c4 = which(x[1,]==4)
c5 = which(x[1,]==5)
c6 = which(x[1,]==6)
x1 = x[-(1),] # remove first row
for (i in c2){tt = D(x1[,i])
x1[,i] = tt}
for (i in c3){
tt = DD(x1[,i])
x1[,i] = tt }
for (i in c4){
tt = L(x1[,i])
x1[,i] = tt }
for (i in c5){
tt = DL(x1[,i])
x1[,i] = tt}
for (i in c6){
tt = DDL(x1[,i])
x1[,i] = tt }
x = x1}
# transform monthly data
x = date_filtering(data.m,
start_date =  startDate,
end_date = endDate,
date_format = date_format)
data.m = transform(x)
View(data.m)
View(x)
date_filtering = function(x, start_date, end_date, date_format){
transform_header = x[1,]
x$Date = as.Date(x$Date,format = date_format)
x = x[x$Date >= start_date & x$Date <= end_date,]
x[1,] = transform_header
return(x)}
data.m = transform(x)
View(data.m)
View(x)
# Load Data
data.m = read.table('month.txt', header = T, sep = ',')
# transform monthly data
x = date_filtering(data.m,
start_date =  startDate,
end_date = endDate,
date_format = date_format)
data.m = transform(x)
View(x)
View(data.m)
data.m1 <- ts(data.m, start = c(1959, 1), frequency = 12)
View(data.m1)
data.m1 <- ts(data.m, start = c(1959, ), frequency = 12)
help(ts)
data.m1 <- ts(data.m, start = c(1959-01-01, ), frequency = 12)
data.m1 <- ts(data.m, start = c(1959-01-01,1 ), frequency = 12)
data.m1 <- ts(data.m, frequency = 12)
quarterly <- aggregate(data.m1, nfrequency = 4, mean)
View(quarterly)
732/3
quarterly$Date = as.Date(x$Date,format = date_format)
View(quarterly)
quarterly$Date = as.Date(quarterly$Date,format = date_format)
data.m = transform(x)
data.m = transform(x)
setwd('C:/Users/zhouq/OneDrive - Nanyang Technological University/FYP/Codes/FYP')
# Load Data
data.m = read.table('month.txt', header = T, sep = ',')
data.q = read.table('quarter.txt', header = T, sep = ',')
'''
Data information
MONTH
Source: FRED - MD
File: month.txt
TRANSFORMATIONS
1: none
2: D
3: DD
4: Log
5: Dlog
6: DDlog
M1* - 5 - INDPRO 		- IP Index
M2  - 2 - CUMFNS 		- Capacity Utilization: Manufacturing
M3  - 2 - UNRATE 		- Civilian Unemployment Rate
M4* - 5 - PAYEMS 		- All Employees: Total nonfarm
M5* - 4 - HOUST  		- Housing Starts: Total New Privately Owned
M6  - 5 - DPCERA3M086SBEA 	- Real personal consumption expenditures
M7* - 5 - RETAILx	  	- Retail and Food Services Sales
M8  - 5 - AMDMNOx 		- New Orders for Durable Goods
M9  - 2 - UMCSENTx		- Consumer Sentiment Index
M10 - 6 - PPIFGS 		- PPI: Finished Goods (in file under WPSFD49207)
M11*- 5 - TWEXMMTH		- Nominal effective exchange rate US
M12*- 2 - FEDFUNDS   		- Effective Federal Funds Rate
M13 - 1 - AAAFFM     		- Moody’s Aaa Corporate Bond Minus FEDFUNDS
M14*- 1 - BAAFFM     		- Moody’s Baa Corporate Bond Minus FEDFUNDS
M15*- 1 - COMPAPFFx  		- 3-Month Commercial Paper Minus FEDFUNDS
M16 - 1 - TB3SMFFM   		- 3-Month Treasury C Minus FEDFUNDS
M17 - 1 - T10YFFM    		- 10-Year Treasury C Minus FEDFUNDS
M18 - 2 - GS1        		- 1-Year Treasury Rate
M19 - 2 - GS10       		- 10-Year Treasury Rate
M20 - 1 - GS10-TB3MS 		- 10-Year Treasury Rate - 3-Month Treasury Bill
* indicated included in the small but not the medium sized sample.
'''
D = function(x){c(NA,diff(x))}
DD = function(x){c(NA,NA,diff(diff(x)))}
L = function(x){c(log(x))}
DL = function(x){c(NA,diff(log(x)))}
DDL = function(x){c(NA,NA,diff(diff(log(x))))}
startDate = "1959-01-01"
endDate = "2019-12-31"
date_format = '%d/%m/%Y'
date_filtering = function(x, start_date, end_date, date_format){
transform_header = x[1,]
x$Date = as.Date(x$Date,format = date_format)
x = x[x$Date >= start_date & x$Date <= end_date,]
x[1,] = transform_header
return(x)}
# transformation type is in first row
transform = function(x){
c2 = which(x[1,]==2)
c3 = which(x[1,]==3)
c4 = which(x[1,]==4)
c5 = which(x[1,]==5)
c6 = which(x[1,]==6)
x1 = x[-(1),] # remove first row
for (i in c2){tt = D(x1[,i])
x1[,i] = tt}
for (i in c3){
tt = DD(x1[,i])
x1[,i] = tt }
for (i in c4){
tt = L(x1[,i])
x1[,i] = tt }
for (i in c5){
tt = DL(x1[,i])
x1[,i] = tt}
for (i in c6){
tt = DDL(x1[,i])
x1[,i] = tt }
x = x1}
# transform monthly data
x = date_filtering(data.m,
start_date =  startDate,
end_date = endDate,
date_format = date_format)
data.m = transform(x)
data.m1 <- ts(data.m, frequency = 12)
data,m1$Date = as.Date(data.m1$Date,format = date_format)
data.m1$Date = as.Date(data.m1$Date,format = date_format)
View(data.m1)
data.m1 <- ts(data.m[2,], start = c(1990, 1), frequency = 12)
data.m1 <- ts(data.m[,2:], start = c(1990, 1), frequency = 12)
data.m1 <- ts(data.m[,-1], start = c(1990, 1), frequency = 12)
data.m1
View(data.m1)
quarterly <- aggregate(data.m1, nfrequency = 4, mean)
data.q1 <- aggregate(data.m1, nfrequency = 4, mean)
View(data.q)
View(data.q1)
# transform quarterly GDP data
tt = DL(data.q[,2])
data.q[,2] = tt
data.q = read.table('quarter.txt', header = T, sep = ',')
# transform quarterly GDP data
x = date_filtering(data.q,
start_date =  startDate,
end_date = endDate,
date_format = date_format)
x = DL(data.q[,2])
data.q[,2] = x
View(data.q)
x = DL(x)
# transform quarterly GDP data
x = date_filtering(data.q,
start_date =  startDate,
end_date = endDate,
date_format = date_format)
x = DL(x)
x1 = DL(x1[,2])
# transform quarterly GDP data
x1 = date_filtering(data.q,
start_date =  startDate,
end_date = endDate,
date_format = date_format)
x1 = DL(x1[,2])
data.q = read.table('quarter.txt', header = T, sep = ',')
# transform quarterly GDP data
x1 = date_filtering(data.q,
start_date =  startDate,
end_date = endDate,
date_format = date_format)
x1 = DL(x1[,2])
data.q[,2] = x
data.q[,2] = x1
data.q = x1
View(data.q)
# transform quarterly GDP data
x1 = date_filtering(data.q,
start_date =  startDate,
end_date = endDate,
date_format = date_format)
x1[,2] = DL(x1[,2])
data.q = read.table('quarter.txt', header = T, sep = ',')
# transform quarterly GDP data
x1 = date_filtering(data.q,
start_date =  startDate,
end_date = endDate,
date_format = date_format)
x1[,2] = DL(x1[,2])
data.q = x1
View(data.q)
# combine datasets
data_transform <- merge(data.q, quarterly ,by="Date")
# combine datasets
data_transform <- merge(data.q, quarterly)
View(data_transform)
# combine datasets
data_transform <- c.bind(data.q, quarterly)
# combine datasets
data_transform <- cbind(data.q, quarterly)
View(data_transform)
View(data.q)
View(data.m)
# transform quarterly GDP data
x1 = date_filtering(data.q,
start_date =  1959-01-01,
end_date = endDate,
date_format = date_format)
x1[,2] = DL(x1[,2])
data.q = read.table('quarter.txt', header = T, sep = ',')
# transform quarterly GDP data
x1 = date_filtering(data.q,
start_date =  1959-01-01,
end_date = endDate,
date_format = date_format)
x1[,2] = DL(x1[,2])
data.q = x1
# combine datasets
data_transform <- cbind(data.q, quarterly)
data.q = read.table('quarter.txt', header = T, sep = ',')
View(data.q)
# transform quarterly GDP data
x1 = date_filtering(data.q,
start_date = 1959-03-31,
end_date = endDate,
date_format = date_format)
x1[,2] = DL(x1[,2])
data.q = x1
View(data.q)
View(data.q)
data.q = x1
data.q = x1
# Load Data
data.m = read.table('month.txt', header = T, sep = ',')
data.q = read.table('quarter.txt', header = T, sep = ',')
D = function(x){c(NA,diff(x))}
DD = function(x){c(NA,NA,diff(diff(x)))}
L = function(x){c(log(x))}
DL = function(x){c(NA,diff(log(x)))}
DDL = function(x){c(NA,NA,diff(diff(log(x))))}
startDate = "1959-01-01"
endDate = "2019-12-31"
date_format = '%d/%m/%Y'
date_filtering = function(x, start_date, end_date, date_format){
transform_header = x[1,]
x$Date = as.Date(x$Date,format = date_format)
x = x[x$Date >= start_date & x$Date <= end_date,]
x[1,] = transform_header
return(x)}
# transformation type is in first row
transform = function(x){
c2 = which(x[1,]==2)
c3 = which(x[1,]==3)
c4 = which(x[1,]==4)
c5 = which(x[1,]==5)
c6 = which(x[1,]==6)
x1 = x[-(1),] # remove first row
for (i in c2){tt = D(x1[,i])
x1[,i] = tt}
for (i in c3){
tt = DD(x1[,i])
x1[,i] = tt }
for (i in c4){
tt = L(x1[,i])
x1[,i] = tt }
for (i in c5){
tt = DL(x1[,i])
x1[,i] = tt}
for (i in c6){
tt = DDL(x1[,i])
x1[,i] = tt }
x = x1}
# transform monthly data
x = date_filtering(data.m,
start_date =  startDate,
end_date = endDate,
date_format = date_format)
data.m = transform(x)
data.m1 <- ts(data.m[,-1], start = c(1990, 1), frequency = 12)
data.q1 <- aggregate(data.m1, nfrequency = 4, mean)
View(data.m1)
View(data.q1)
-0.1 -0.3 -0.4
-0.4/3
View(data.q)
# transform quarterly GDP data
x1 = date_filtering(data.q,
start_date = 1959-03-31,
end_date = endDate,
date_format = date_format)
x1[,2] = DL(x1[,2])
data.q = x1
data.q = read.table('quarter.txt', header = T, sep = ',')
# transform quarterly GDP data
x1 = date_filtering(data.q,
start_date = startDate,
end_date = endDate,
date_format = date_format)
x1[,2] = DL(x1[,2])
data.q = x1
data.q[1,]
data.q[1,1]=1959-03-31
data.q[1,1]=1959-03-31
data.q[1,1]=1959-01-31
data.q = x1
data.q[1,1]
data.q[1,1] = = as.Date(x$Date,format = date_format)
data.q[1,1] = as.Date(x$Date,format = date_format)
data.q[1,1] = as.Date(data.q[1,1],format = date_format)
data.q[1,1]
date <- dmy('1959-03-31')
library(lubridate)
install.packages("lubridate")
date <- dmy('1959-03-31')
library(lubridate)
# combine datasets
data_transform <- cbind(data.q, quarterly)
date <- dmy('11/02/2019')
day(date) <- 1
date
date = dmy('31/03/1959')
date
data.q[1,1]= date
View(data.q)
# combine datasets
data_transform <- cbind(data.q, quarterly)
# transform monthly data
x = date_filtering(data.m,
start_date =  startDate,
end_date = endDate,
date_format = date_format)
data.m = transform(x)
data.m1 <- ts(data.m[,-1], start = c(1990, 1), frequency = 12)
data.q1 <- aggregate(data.m1, nfrequency = 4, mean)
# combine datasets
data_transform <- cbind(data.q, quarterly)
# combine datasets
data_transform <- cbind(data.q, data.q1)
setwd('C:/Users/zhouq/OneDrive - Nanyang Technological University/FYP/Codes/FYP')
library(lubridate)
# Load Data
data.m = read.table('month.txt', header = T, sep = ',')
data.q = read.table('quarter.txt', header = T, sep = ',')
D = function(x){c(NA,diff(x))}
DD = function(x){c(NA,NA,diff(diff(x)))}
L = function(x){c(log(x))}
DL = function(x){c(NA,diff(log(x)))}
DDL = function(x){c(NA,NA,diff(diff(log(x))))}
startDate = "1959-01-01"
endDate = "2019-12-31"
date_format = '%d/%m/%Y'
date_filtering = function(x, start_date, end_date, date_format){
transform_header = x[1,]
x$Date = as.Date(x$Date,format = date_format)
x = x[x$Date >= start_date & x$Date <= end_date,]
x[1,] = transform_header
return(x)}
# transformation type is in first row
transform = function(x){
c2 = which(x[1,]==2)
c3 = which(x[1,]==3)
c4 = which(x[1,]==4)
c5 = which(x[1,]==5)
c6 = which(x[1,]==6)
x1 = x[-(1),] # remove first row
for (i in c2){tt = D(x1[,i])
x1[,i] = tt}
for (i in c3){
tt = DD(x1[,i])
x1[,i] = tt }
for (i in c4){
tt = L(x1[,i])
x1[,i] = tt }
for (i in c5){
tt = DL(x1[,i])
x1[,i] = tt}
for (i in c6){
tt = DDL(x1[,i])
x1[,i] = tt }
x = x1}
# transform monthly data
x = date_filtering(data.m,
start_date =  startDate,
end_date = endDate,
date_format = date_format)
data.m = transform(x)
data.m1 <- ts(data.m[,-1], start = c(1990, 1), frequency = 12)
data.q1 <- aggregate(data.m1, nfrequency = 4, mean)
# transform quarterly GDP data
x1 = date_filtering(data.q,
start_date = startDate,
end_date = endDate,
date_format = date_format)
x1[,2] = DL(x1[,2])
data.q = x1
data.q[1,1]= dmy('31/03/1959')
# combine datasets
data_transform <- cbind(data.q, data.q1)
View(data_transform)
View(data.m)
View(data.q)
write.csv(data_transform, row.names=FALSE)
write.csv(data_transform, "Data_transform", row.names=FALSE)
write.csv(data_transform, "Data_transform.csv", row.names=FALSE)
